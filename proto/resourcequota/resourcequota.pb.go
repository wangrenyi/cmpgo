// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/wangrenyi/kmpgo/proto/resourcequota/resourcequota.proto

/*
Package resourcequota is a generated protocol buffer package.

It is generated from these files:
	github.com/wangrenyi/kmpgo/proto/resourcequota/resourcequota.proto

It has these top-level messages:
*/
package resourcequota

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/wangrenyi/kmpgo/proto/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ResourceQuotaInterface service

type ResourceQuotaInterfaceClient interface {
	ResourceQuotaCreate(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error)
	ResourceQuotaUpdate(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error)
	ResourceQuotaUpdateStatus(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error)
	ResourceQuotaDelete(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error)
	ResourceQuotaDeleteCollection(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error)
	ResourceQuotaGet(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error)
	ResourceQuotaList(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error)
	ResourceQuotaWatch(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error)
	ResourceQuotaPatch(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error)
}

type resourceQuotaInterfaceClient struct {
	cc *grpc.ClientConn
}

func NewResourceQuotaInterfaceClient(cc *grpc.ClientConn) ResourceQuotaInterfaceClient {
	return &resourceQuotaInterfaceClient{cc}
}

func (c *resourceQuotaInterfaceClient) ResourceQuotaCreate(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error) {
	out := new(common.InvokeServiceResponse)
	err := grpc.Invoke(ctx, "/resourcequota.ResourceQuotaInterface/ResourceQuotaCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceQuotaInterfaceClient) ResourceQuotaUpdate(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error) {
	out := new(common.InvokeServiceResponse)
	err := grpc.Invoke(ctx, "/resourcequota.ResourceQuotaInterface/ResourceQuotaUpdate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceQuotaInterfaceClient) ResourceQuotaUpdateStatus(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error) {
	out := new(common.InvokeServiceResponse)
	err := grpc.Invoke(ctx, "/resourcequota.ResourceQuotaInterface/ResourceQuotaUpdateStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceQuotaInterfaceClient) ResourceQuotaDelete(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error) {
	out := new(common.InvokeServiceResponse)
	err := grpc.Invoke(ctx, "/resourcequota.ResourceQuotaInterface/ResourceQuotaDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceQuotaInterfaceClient) ResourceQuotaDeleteCollection(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error) {
	out := new(common.InvokeServiceResponse)
	err := grpc.Invoke(ctx, "/resourcequota.ResourceQuotaInterface/ResourceQuotaDeleteCollection", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceQuotaInterfaceClient) ResourceQuotaGet(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error) {
	out := new(common.InvokeServiceResponse)
	err := grpc.Invoke(ctx, "/resourcequota.ResourceQuotaInterface/ResourceQuotaGet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceQuotaInterfaceClient) ResourceQuotaList(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error) {
	out := new(common.InvokeServiceResponse)
	err := grpc.Invoke(ctx, "/resourcequota.ResourceQuotaInterface/ResourceQuotaList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceQuotaInterfaceClient) ResourceQuotaWatch(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error) {
	out := new(common.InvokeServiceResponse)
	err := grpc.Invoke(ctx, "/resourcequota.ResourceQuotaInterface/ResourceQuotaWatch", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceQuotaInterfaceClient) ResourceQuotaPatch(ctx context.Context, in *common.InvokeServiceRequest, opts ...grpc.CallOption) (*common.InvokeServiceResponse, error) {
	out := new(common.InvokeServiceResponse)
	err := grpc.Invoke(ctx, "/resourcequota.ResourceQuotaInterface/ResourceQuotaPatch", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ResourceQuotaInterface service

type ResourceQuotaInterfaceServer interface {
	ResourceQuotaCreate(context.Context, *common.InvokeServiceRequest) (*common.InvokeServiceResponse, error)
	ResourceQuotaUpdate(context.Context, *common.InvokeServiceRequest) (*common.InvokeServiceResponse, error)
	ResourceQuotaUpdateStatus(context.Context, *common.InvokeServiceRequest) (*common.InvokeServiceResponse, error)
	ResourceQuotaDelete(context.Context, *common.InvokeServiceRequest) (*common.InvokeServiceResponse, error)
	ResourceQuotaDeleteCollection(context.Context, *common.InvokeServiceRequest) (*common.InvokeServiceResponse, error)
	ResourceQuotaGet(context.Context, *common.InvokeServiceRequest) (*common.InvokeServiceResponse, error)
	ResourceQuotaList(context.Context, *common.InvokeServiceRequest) (*common.InvokeServiceResponse, error)
	ResourceQuotaWatch(context.Context, *common.InvokeServiceRequest) (*common.InvokeServiceResponse, error)
	ResourceQuotaPatch(context.Context, *common.InvokeServiceRequest) (*common.InvokeServiceResponse, error)
}

func RegisterResourceQuotaInterfaceServer(s *grpc.Server, srv ResourceQuotaInterfaceServer) {
	s.RegisterService(&_ResourceQuotaInterface_serviceDesc, srv)
}

func _ResourceQuotaInterface_ResourceQuotaCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.InvokeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcequota.ResourceQuotaInterface/ResourceQuotaCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaCreate(ctx, req.(*common.InvokeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceQuotaInterface_ResourceQuotaUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.InvokeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcequota.ResourceQuotaInterface/ResourceQuotaUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaUpdate(ctx, req.(*common.InvokeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceQuotaInterface_ResourceQuotaUpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.InvokeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaUpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcequota.ResourceQuotaInterface/ResourceQuotaUpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaUpdateStatus(ctx, req.(*common.InvokeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceQuotaInterface_ResourceQuotaDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.InvokeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcequota.ResourceQuotaInterface/ResourceQuotaDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaDelete(ctx, req.(*common.InvokeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceQuotaInterface_ResourceQuotaDeleteCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.InvokeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaDeleteCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcequota.ResourceQuotaInterface/ResourceQuotaDeleteCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaDeleteCollection(ctx, req.(*common.InvokeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceQuotaInterface_ResourceQuotaGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.InvokeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcequota.ResourceQuotaInterface/ResourceQuotaGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaGet(ctx, req.(*common.InvokeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceQuotaInterface_ResourceQuotaList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.InvokeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcequota.ResourceQuotaInterface/ResourceQuotaList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaList(ctx, req.(*common.InvokeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceQuotaInterface_ResourceQuotaWatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.InvokeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaWatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcequota.ResourceQuotaInterface/ResourceQuotaWatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaWatch(ctx, req.(*common.InvokeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceQuotaInterface_ResourceQuotaPatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.InvokeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaPatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resourcequota.ResourceQuotaInterface/ResourceQuotaPatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceQuotaInterfaceServer).ResourceQuotaPatch(ctx, req.(*common.InvokeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourceQuotaInterface_serviceDesc = grpc.ServiceDesc{
	ServiceName: "resourcequota.ResourceQuotaInterface",
	HandlerType: (*ResourceQuotaInterfaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ResourceQuotaCreate",
			Handler:    _ResourceQuotaInterface_ResourceQuotaCreate_Handler,
		},
		{
			MethodName: "ResourceQuotaUpdate",
			Handler:    _ResourceQuotaInterface_ResourceQuotaUpdate_Handler,
		},
		{
			MethodName: "ResourceQuotaUpdateStatus",
			Handler:    _ResourceQuotaInterface_ResourceQuotaUpdateStatus_Handler,
		},
		{
			MethodName: "ResourceQuotaDelete",
			Handler:    _ResourceQuotaInterface_ResourceQuotaDelete_Handler,
		},
		{
			MethodName: "ResourceQuotaDeleteCollection",
			Handler:    _ResourceQuotaInterface_ResourceQuotaDeleteCollection_Handler,
		},
		{
			MethodName: "ResourceQuotaGet",
			Handler:    _ResourceQuotaInterface_ResourceQuotaGet_Handler,
		},
		{
			MethodName: "ResourceQuotaList",
			Handler:    _ResourceQuotaInterface_ResourceQuotaList_Handler,
		},
		{
			MethodName: "ResourceQuotaWatch",
			Handler:    _ResourceQuotaInterface_ResourceQuotaWatch_Handler,
		},
		{
			MethodName: "ResourceQuotaPatch",
			Handler:    _ResourceQuotaInterface_ResourceQuotaPatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/wangrenyi/kmpgo/proto/resourcequota/resourcequota.proto",
}

func init() {
	proto.RegisterFile("github.com/wangrenyi/kmpgo/proto/resourcequota/resourcequota.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0xd3, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x06, 0x60, 0x4f, 0x3d, 0x0c, 0x08, 0x1a, 0x41, 0xb0, 0xd8, 0x8b, 0x0f, 0x90, 0x80, 0xfa,
	0x04, 0x56, 0x90, 0x82, 0x07, 0x9b, 0x28, 0x82, 0x07, 0x61, 0xbb, 0xfe, 0xa6, 0x4b, 0x93, 0x9d,
	0x74, 0x77, 0xb6, 0xe2, 0x13, 0xf9, 0x9a, 0x62, 0xcd, 0x65, 0xb1, 0xd2, 0x43, 0xf6, 0xb4, 0xec,
	0xfc, 0xc3, 0xc7, 0x7f, 0x19, 0xba, 0xa9, 0x8d, 0x2c, 0xc3, 0x22, 0xd7, 0xdc, 0x16, 0x1f, 0xca,
	0xd6, 0x0e, 0xf6, 0xd3, 0x14, 0xab, 0xb6, 0xab, 0xb9, 0xe8, 0x1c, 0x0b, 0x17, 0x0e, 0x9e, 0x83,
	0xd3, 0x58, 0x07, 0x16, 0x15, 0xff, 0xf2, 0xed, 0x46, 0x76, 0x18, 0x0d, 0xc7, 0xd7, 0x7b, 0x49,
	0xcd, 0x6d, 0xcb, 0xb6, 0x7f, 0x7e, 0x91, 0xcb, 0xaf, 0x11, 0x9d, 0x96, 0xbd, 0x33, 0xff, 0x71,
	0x66, 0x56, 0xe0, 0xde, 0x95, 0x46, 0xf6, 0x48, 0x27, 0x51, 0x32, 0x75, 0x50, 0x82, 0xec, 0x3c,
	0xef, 0x81, 0x99, 0xdd, 0xf0, 0x0a, 0x15, 0xdc, 0xc6, 0x68, 0x94, 0x58, 0x07, 0x78, 0x19, 0x4f,
	0xfe, 0x49, 0x7d, 0xc7, 0xd6, 0xe3, 0xe2, 0xe0, 0x8f, 0xfa, 0xd4, 0xbd, 0x25, 0x50, 0x5f, 0xe8,
	0x6c, 0x87, 0x5a, 0x89, 0x92, 0xe0, 0x53, 0x37, 0xbe, 0x45, 0x83, 0xe1, 0x8d, 0x5f, 0x69, 0xb2,
	0x43, 0x9d, 0x72, 0xd3, 0x40, 0x8b, 0x61, 0x3b, 0xd4, 0x9f, 0xd3, 0x51, 0xe4, 0xdf, 0x41, 0x86,
	0x92, 0x25, 0x1d, 0x47, 0xe4, 0xbd, 0xf1, 0x83, 0xcd, 0x8a, 0xb2, 0xc8, 0x7c, 0x56, 0xa2, 0x97,
	0xa9, 0xd1, 0x87, 0x04, 0xe8, 0x62, 0xb4, 0x3d, 0x98, 0xab, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x5f, 0x01, 0x50, 0x68, 0xbb, 0x03, 0x00, 0x00,
}
